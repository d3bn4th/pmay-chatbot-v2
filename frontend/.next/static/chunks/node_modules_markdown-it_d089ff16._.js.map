{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/common/entities.js"],"sourcesContent":["// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,EAAE;AACF;AAEA,iBAAiB,GACjB,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/common/utils.js"],"sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/helpers/parse_link_label.js"],"sourcesContent":["// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n"],"names":[],"mappings":"AAAA,mBAAmB;AACnB,EAAE;AACF,oEAAoE;AACpE,+BAA+B;AAC/B,EAAE;AACF;AAEA,OAAO,OAAO,GAAG,SAAS,eAAe,KAAK,EAAE,KAAK,EAAE,aAAa;IAClE,IAAI,OAAO,OAAO,QAAQ,SACtB,WAAW,CAAC,GACZ,MAAM,MAAM,MAAM,EAClB,SAAS,MAAM,GAAG;IAEtB,MAAM,GAAG,GAAG,QAAQ;IACpB,QAAQ;IAER,MAAO,MAAM,GAAG,GAAG,IAAK;QACtB,SAAS,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG;QACvC,IAAI,WAAW,KAAK,KAAK,KAAI;YAC3B;YACA,IAAI,UAAU,GAAG;gBACf,QAAQ;gBACR;YACF;QACF;QAEA,UAAU,MAAM,GAAG;QACnB,MAAM,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;QAC1B,IAAI,WAAW,KAAK,KAAK,KAAI;YAC3B,IAAI,YAAY,MAAM,GAAG,GAAG,GAAG;gBAC7B,uEAAuE;gBACvE;YACF,OAAO,IAAI,eAAe;gBACxB,MAAM,GAAG,GAAG;gBACZ,OAAO,CAAC;YACV;QACF;IACF;IAEA,IAAI,OAAO;QACT,WAAW,MAAM,GAAG;IACtB;IAEA,oBAAoB;IACpB,MAAM,GAAG,GAAG;IAEZ,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/helpers/parse_link_destination.js"],"sourcesContent":["// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code, level,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n"],"names":[],"mappings":"AAAA,yBAAyB;AACzB,EAAE;AACF;AAGA,IAAI,cAAc,4GAA2B,WAAW;AAGxD,OAAO,OAAO,GAAG,SAAS,qBAAqB,GAAG,EAAE,KAAK,EAAE,GAAG;IAC5D,IAAI,MAAM,OACN,MAAM,OACN,SAAS;QACP,IAAI;QACJ,KAAK;QACL,OAAO;QACP,KAAK;IACP;IAEJ,IAAI,IAAI,UAAU,CAAC,SAAS,KAAK,KAAK,KAAI;QACxC;QACA,MAAO,MAAM,IAAK;YAChB,OAAO,IAAI,UAAU,CAAC;YACtB,IAAI,SAAS,KAAK,MAAM,KAAI;gBAAE,OAAO;YAAQ;YAC7C,IAAI,SAAS,KAAK,KAAK,KAAI;gBAAE,OAAO;YAAQ;YAC5C,IAAI,SAAS,KAAK,KAAK,KAAI;gBACzB,OAAO,GAAG,GAAG,MAAM;gBACnB,OAAO,GAAG,GAAG,YAAY,IAAI,KAAK,CAAC,QAAQ,GAAG;gBAC9C,OAAO,EAAE,GAAG;gBACZ,OAAO;YACT;YACA,IAAI,SAAS,KAAK,KAAK,OAAM,MAAM,IAAI,KAAK;gBAC1C,OAAO;gBACP;YACF;YAEA;QACF;QAEA,iBAAiB;QACjB,OAAO;IACT;IAEA,yCAAyC;IAEzC,QAAQ;IACR,MAAO,MAAM,IAAK;QAChB,OAAO,IAAI,UAAU,CAAC;QAEtB,IAAI,SAAS,MAAM;YAAE;QAAO;QAE5B,2BAA2B;QAC3B,IAAI,OAAO,QAAQ,SAAS,MAAM;YAAE;QAAO;QAE3C,IAAI,SAAS,KAAK,KAAK,OAAM,MAAM,IAAI,KAAK;YAC1C,IAAI,IAAI,UAAU,CAAC,MAAM,OAAO,MAAM;gBAAE;YAAO;YAC/C,OAAO;YACP;QACF;QAEA,IAAI,SAAS,KAAK,KAAK,KAAI;YACzB;YACA,IAAI,QAAQ,IAAI;gBAAE,OAAO;YAAQ;QACnC;QAEA,IAAI,SAAS,KAAK,KAAK,KAAI;YACzB,IAAI,UAAU,GAAG;gBAAE;YAAO;YAC1B;QACF;QAEA;IACF;IAEA,IAAI,UAAU,KAAK;QAAE,OAAO;IAAQ;IACpC,IAAI,UAAU,GAAG;QAAE,OAAO;IAAQ;IAElC,OAAO,GAAG,GAAG,YAAY,IAAI,KAAK,CAAC,OAAO;IAC1C,OAAO,GAAG,GAAG;IACb,OAAO,EAAE,GAAG;IACZ,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/helpers/parse_link_title.js"],"sourcesContent":["// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n"],"names":[],"mappings":"AAAA,mBAAmB;AACnB,EAAE;AACF;AAGA,IAAI,cAAc,4GAA2B,WAAW;AAGxD,OAAO,OAAO,GAAG,SAAS,eAAe,GAAG,EAAE,KAAK,EAAE,GAAG;IACtD,IAAI,MACA,QACA,QAAQ,GACR,MAAM,OACN,SAAS;QACP,IAAI;QACJ,KAAK;QACL,OAAO;QACP,KAAK;IACP;IAEJ,IAAI,OAAO,KAAK;QAAE,OAAO;IAAQ;IAEjC,SAAS,IAAI,UAAU,CAAC;IAExB,IAAI,WAAW,KAAK,KAAK,OAAM,WAAW,KAAK,KAAK,OAAM,WAAW,KAAK,KAAK,KAAI;QAAE,OAAO;IAAQ;IAEpG;IAEA,4DAA4D;IAC5D,IAAI,WAAW,MAAM;QAAE,SAAS;IAAM;IAEtC,MAAO,MAAM,IAAK;QAChB,OAAO,IAAI,UAAU,CAAC;QACtB,IAAI,SAAS,QAAQ;YACnB,OAAO,GAAG,GAAG,MAAM;YACnB,OAAO,KAAK,GAAG;YACf,OAAO,GAAG,GAAG,YAAY,IAAI,KAAK,CAAC,QAAQ,GAAG;YAC9C,OAAO,EAAE,GAAG;YACZ,OAAO;QACT,OAAO,IAAI,SAAS,KAAK,KAAK,OAAM,WAAW,KAAK,KAAK,KAAI;YAC3D,OAAO;QACT,OAAO,IAAI,SAAS,MAAM;YACxB;QACF,OAAO,IAAI,SAAS,KAAK,KAAK,OAAM,MAAM,IAAI,KAAK;YACjD;YACA,IAAI,IAAI,UAAU,CAAC,SAAS,MAAM;gBAChC;YACF;QACF;QAEA;IACF;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/helpers/index.js"],"sourcesContent":["// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n"],"names":[],"mappings":"AAAA,kCAAkC;AAClC;AAGA,QAAQ,cAAc;AACtB,QAAQ,oBAAoB;AAC5B,QAAQ,cAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/renderer.js"],"sourcesContent":["/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/token.js"],"sourcesContent":["// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n"],"names":[],"mappings":"AAAA,cAAc;AAEd;AAGA;;EAEE,GAEF;;;;EAIE,GACF,SAAS,MAAM,IAAI,EAAE,GAAG,EAAE,OAAO;IAC/B;;;;IAIE,GACF,IAAI,CAAC,IAAI,GAAO;IAEhB;;;;IAIE,GACF,IAAI,CAAC,GAAG,GAAQ;IAEhB;;;;IAIE,GACF,IAAI,CAAC,KAAK,GAAM;IAEhB;;;;IAIE,GACF,IAAI,CAAC,GAAG,GAAQ;IAEhB;;;;;;;;IAQE,GACF,IAAI,CAAC,OAAO,GAAI;IAEhB;;;;IAIE,GACF,IAAI,CAAC,KAAK,GAAM;IAEhB;;;;IAIE,GACF,IAAI,CAAC,QAAQ,GAAG;IAEhB;;;;;IAKE,GACF,IAAI,CAAC,OAAO,GAAI;IAEhB;;;;IAIE,GACF,IAAI,CAAC,MAAM,GAAK;IAEhB;;;;;;;;IAQE,GACF,IAAI,CAAC,IAAI,GAAO;IAEhB;;;;IAIE,GACF,IAAI,CAAC,IAAI,GAAO;IAEhB;;;;;IAKE,GACF,IAAI,CAAC,KAAK,GAAM;IAEhB;;;;;IAKE,GACF,IAAI,CAAC,MAAM,GAAK;AAClB;AAGA;;;;EAIE,GACF,MAAM,SAAS,CAAC,SAAS,GAAG,SAAS,UAAU,IAAI;IACjD,IAAI,OAAO,GAAG;IAEd,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;QAAE,OAAO,CAAC;IAAG;IAE9B,QAAQ,IAAI,CAAC,KAAK;IAElB,IAAK,IAAI,GAAG,MAAM,MAAM,MAAM,EAAE,IAAI,KAAK,IAAK;QAC5C,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,MAAM;YAAE,OAAO;QAAG;IACxC;IACA,OAAO,CAAC;AACV;AAGA;;;;EAIE,GACF,MAAM,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAS,QAAQ;IACnD,IAAI,IAAI,CAAC,KAAK,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IAClB,OAAO;QACL,IAAI,CAAC,KAAK,GAAG;YAAE;SAAU;IAC3B;AACF;AAGA;;;;EAIE,GACF,MAAM,SAAS,CAAC,OAAO,GAAG,SAAS,QAAQ,IAAI,EAAE,KAAK;IACpD,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,OACrB,WAAW;QAAE;QAAM;KAAO;IAE9B,IAAI,MAAM,GAAG;QACX,IAAI,CAAC,QAAQ,CAAC;IAChB,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG;IACpB;AACF;AAGA;;;;EAIE,GACF,MAAM,SAAS,CAAC,OAAO,GAAG,SAAS,QAAQ,IAAI;IAC7C,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,QAAQ;IACxC,IAAI,OAAO,GAAG;QACZ,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC5B;IACA,OAAO;AACT;AAGA;;;;;EAKE,GACF,MAAM,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAS,IAAI,EAAE,KAAK;IACtD,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC;IAEzB,IAAI,MAAM,GAAG;QACX,IAAI,CAAC,QAAQ,CAAC;YAAE;YAAM;SAAO;IAC/B,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM;IAClD;AACF;AAGA,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/state_core.js"],"sourcesContent":["// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,EAAE;AACF;AAEA,IAAI;AAGJ,SAAS,UAAU,GAAG,EAAE,EAAE,EAAE,GAAG;IAC7B,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,MAAM,GAAG,EAAE;IAChB,IAAI,CAAC,UAAU,GAAG;IAClB,IAAI,CAAC,EAAE,GAAG,IAAI,0BAA0B;AAC1C;AAEA,6CAA6C;AAC7C,UAAU,SAAS,CAAC,KAAK,GAAG;AAG5B,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/ruler.js"],"sourcesContent":["/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/normalize.js"],"sourcesContent":["// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n"],"names":[],"mappings":"AAAA,yBAAyB;AAEzB;AAGA,gDAAgD;AAChD,IAAI,cAAe;AACnB,IAAI,UAAe;AAGnB,OAAO,OAAO,GAAG,SAAS,UAAU,KAAK;IACvC,IAAI;IAEJ,qBAAqB;IACrB,MAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAa;IAErC,0BAA0B;IAC1B,MAAM,IAAI,OAAO,CAAC,SAAS;IAE3B,MAAM,GAAG,GAAG;AACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1281, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/block.js"],"sourcesContent":["'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n"],"names":[],"mappings":"AAAA;AAGA,OAAO,OAAO,GAAG,SAAS,MAAM,KAAK;IACnC,IAAI;IAEJ,IAAI,MAAM,UAAU,EAAE;QACpB,QAAiB,IAAI,MAAM,KAAK,CAAC,UAAU,IAAI;QAC/C,MAAM,OAAO,GAAI,MAAM,GAAG;QAC1B,MAAM,GAAG,GAAQ;YAAE;YAAG;SAAG;QACzB,MAAM,QAAQ,GAAG,EAAE;QACnB,MAAM,MAAM,CAAC,IAAI,CAAC;IACpB,OAAO;QACL,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,MAAM,MAAM;IACnE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1302, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/inline.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA;AAEA,OAAO,OAAO,GAAG,SAAS,OAAO,KAAK;IACpC,IAAI,SAAS,MAAM,MAAM,EAAE,KAAK,GAAG;IAEnC,gBAAgB;IAChB,IAAK,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAI,GAAG,IAAK;QACzC,MAAM,MAAM,CAAC,EAAE;QACf,IAAI,IAAI,IAAI,KAAK,UAAU;YACzB,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,EAAE,MAAM,EAAE,EAAE,MAAM,GAAG,EAAE,IAAI,QAAQ;QACtE;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/linkify.js"],"sourcesContent":["// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1442, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/replacements.js"],"sourcesContent":["// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n"],"names":[],"mappings":"AAAA,kCAAkC;AAClC,EAAE;AACF,cAAc;AACd,gBAAgB;AAChB,cAAc;AACd,SAAS;AACT,0CAA0C;AAC1C,0CAA0C;AAC1C,8BAA8B;AAC9B,EAAE;AACF;AAEA,QAAQ;AACR,yCAAyC;AACzC,mCAAmC;AAEnC,IAAI,UAAU;AAEd,yDAAyD;AACzD,4CAA4C;AAC5C,IAAI,sBAAsB;AAE1B,IAAI,iBAAiB;AACrB,IAAI,cAAc;IAChB,GAAG;IACH,GAAG;IACH,IAAI;AACN;AAEA,SAAS,UAAU,KAAK,EAAE,IAAI;IAC5B,OAAO,WAAW,CAAC,KAAK,WAAW,GAAG;AACxC;AAEA,SAAS,eAAe,YAAY;IAClC,IAAI,GAAG,OAAO,kBAAkB;IAEhC,IAAK,IAAI,aAAa,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC7C,QAAQ,YAAY,CAAC,EAAE;QAEvB,IAAI,MAAM,IAAI,KAAK,UAAU,CAAC,iBAAiB;YAC7C,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,gBAAgB;QACxD;QAEA,IAAI,MAAM,IAAI,KAAK,eAAe,MAAM,IAAI,KAAK,QAAQ;YACvD;QACF;QAEA,IAAI,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,QAAQ;YACxD;QACF;IACF;AACF;AAEA,SAAS,aAAa,YAAY;IAChC,IAAI,GAAG,OAAO,kBAAkB;IAEhC,IAAK,IAAI,aAAa,MAAM,GAAG,GAAG,KAAK,GAAG,IAAK;QAC7C,QAAQ,YAAY,CAAC,EAAE;QAEvB,IAAI,MAAM,IAAI,KAAK,UAAU,CAAC,iBAAiB;YAC7C,IAAI,QAAQ,IAAI,CAAC,MAAM,OAAO,GAAG;gBAC/B,MAAM,OAAO,GAAG,MAAM,OAAO,CAC1B,OAAO,CAAC,QAAQ,IACjB,wBAAwB;gBACxB,mCAAmC;iBAClC,OAAO,CAAC,WAAW,KAAK,OAAO,CAAC,YAAY,QAC5C,OAAO,CAAC,eAAe,UAAU,OAAO,CAAC,UAAU,IACpD,UAAU;iBACT,OAAO,CAAC,2BAA2B,WACpC,UAAU;iBACT,OAAO,CAAC,sBAAsB,YAC9B,OAAO,CAAC,8BAA8B;YAC3C;QACF;QAEA,IAAI,MAAM,IAAI,KAAK,eAAe,MAAM,IAAI,KAAK,QAAQ;YACvD;QACF;QAEA,IAAI,MAAM,IAAI,KAAK,gBAAgB,MAAM,IAAI,KAAK,QAAQ;YACxD;QACF;IACF;AACF;AAGA,OAAO,OAAO,GAAG,SAAS,QAAQ,KAAK;IACrC,IAAI;IAEJ,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE;QAAE;IAAQ;IAE7C,IAAK,SAAS,MAAM,MAAM,CAAC,MAAM,GAAG,GAAG,UAAU,GAAG,SAAU;QAE5D,IAAI,MAAM,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,UAAU;YAAE;QAAU;QAExD,IAAI,oBAAoB,IAAI,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG;YAC1D,eAAe,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ;QAC9C;QAEA,IAAI,QAAQ,IAAI,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG;YAC9C,aAAa,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ;QAC5C;IAEF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/smartquotes.js"],"sourcesContent":["// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1698, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_core/text_join.js"],"sourcesContent":["// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,iDAAiD;AACjD,EAAE;AACF,uEAAuE;AACvE,oEAAoE;AACpE,EAAE;AACF,0DAA0D;AAC1D,EAAE;AACF;AAGA,OAAO,OAAO,GAAG,SAAS,UAAU,KAAK;IACvC,IAAI,GAAG,GAAG,QAAQ,MAAM,KAAK,MACzB,cAAc,MAAM,MAAM;IAE9B,IAAK,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IAAI,GAAG,IAAK;QAC9C,IAAI,WAAW,CAAC,EAAE,CAAC,IAAI,KAAK,UAAU;QAEtC,SAAS,WAAW,CAAC,EAAE,CAAC,QAAQ;QAChC,MAAM,OAAO,MAAM;QAEnB,IAAK,OAAO,GAAG,OAAO,KAAK,OAAQ;YACjC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,gBAAgB;gBACxC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG;YACtB;QACF;QAEA,IAAK,OAAO,OAAO,GAAG,OAAO,KAAK,OAAQ;YACxC,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,UACtB,OAAO,IAAI,OACX,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK,QAAQ;gBAEpC,mCAAmC;gBACnC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO;YAC5E,OAAO;gBACL,IAAI,SAAS,MAAM;oBAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;gBAAE;gBAElD;YACF;QACF;QAEA,IAAI,SAAS,MAAM;YACjB,OAAO,MAAM,GAAG;QAClB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/parser_core.js"],"sourcesContent":["/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n"],"names":[],"mappings":"AAAA;;;;;EAKE,GACF;AAGA,IAAI;AAGJ,IAAI,SAAS;IACX;QAAE;;KAA0D;IAC5D;QAAE;;KAA0D;IAC5D;QAAE;;KAA0D;IAC5D;QAAE;;KAA0D;IAC5D;QAAE;;KAA0D;IAC5D;QAAE;;KAA0D;IAC5D,iEAAiE;IACjE,2CAA2C;IAC3C;QAAE;;KAA0D;CAC7D;AAGD;;EAEE,GACF,SAAS;IACP;;;;IAIE,GACF,IAAI,CAAC,KAAK,GAAG,IAAI;IAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE;IAC5C;AACF;AAGA;;;;EAIE,GACF,KAAK,SAAS,CAAC,OAAO,GAAG,SAAU,KAAK;IACtC,IAAI,GAAG,GAAG;IAEV,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;IAE5B,IAAK,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAI,GAAG,IAAK;QACxC,KAAK,CAAC,EAAE,CAAC;IACX;AACF;AAEA,KAAK,SAAS,CAAC,KAAK;AAGpB,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1807, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/state_block.js"],"sourcesContent":["// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2008, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/table.js"],"sourcesContent":["// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2231, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/code.js"],"sourcesContent":["// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,+BAA+B;AAE/B;AAGA,OAAO,OAAO,GAAG,SAAS,KAAK,KAAK,EAAE,SAAS,EAAE,QAAO,UAAU,GAAV;IACtD,IAAI,UAAU,MAAM;IAEpB,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,GAAG,GAAG;QAAE,OAAO;IAAO;IAEnE,OAAO,WAAW,YAAY;IAE9B,MAAO,WAAW,QAAS;QACzB,IAAI,MAAM,OAAO,CAAC,WAAW;YAC3B;YACA;QACF;QAEA,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,IAAI,GAAG;YACjD;YACA,OAAO;YACP;QACF;QACA;IACF;IAEA,MAAM,IAAI,GAAG;IAEb,QAAgB,MAAM,IAAI,CAAC,cAAc,QAAQ;IACjD,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,MAAM,IAAI,MAAM,SAAS,EAAE,SAAS;IAC9E,MAAM,GAAG,GAAO;QAAE;QAAW,MAAM,IAAI;KAAE;IAEzC,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2265, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/fence.js"],"sourcesContent":["// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B;AAGA,OAAO,OAAO,GAAG,SAAS,MAAM,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM;IAC/D,IAAI,QAAQ,KAAK,QAAQ,UAAU,KAAK,OAAO,QAC3C,gBAAgB,OAChB,MAAM,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,EACvD,MAAM,MAAM,MAAM,CAAC,UAAU;IAEjC,iEAAiE;IACjE,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI,GAAG;QAAE,OAAO;IAAO;IAEpE,IAAI,MAAM,IAAI,KAAK;QAAE,OAAO;IAAO;IAEnC,SAAS,MAAM,GAAG,CAAC,UAAU,CAAC;IAE9B,IAAI,WAAW,KAAI,KAAK,OAAM,WAAW,KAAK,KAAK,KAAI;QACrD,OAAO;IACT;IAEA,qBAAqB;IACrB,MAAM;IACN,MAAM,MAAM,SAAS,CAAC,KAAK;IAE3B,MAAM,MAAM;IAEZ,IAAI,MAAM,GAAG;QAAE,OAAO;IAAO;IAE7B,SAAS,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK;IAC9B,SAAS,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK;IAE9B,IAAI,WAAW,KAAK,KAAK,KAAI;QAC3B,IAAI,OAAO,OAAO,CAAC,OAAO,YAAY,CAAC,YAAY,GAAG;YACpD,OAAO;QACT;IACF;IAEA,sEAAsE;IACtE,IAAI,QAAQ;QAAE,OAAO;IAAM;IAE3B,sBAAsB;IACtB,WAAW;IAEX,OAAS;QACP;QACA,IAAI,YAAY,SAAS;YAGvB;QACF;QAEA,MAAM,MAAM,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,SAAS;QAC3D,MAAM,MAAM,MAAM,CAAC,SAAS;QAE5B,IAAI,MAAM,OAAO,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,EAAE;YAIzD;QACF;QAEA,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,QAAQ;YAAE;QAAU;QAEtD,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,IAAI,GAAG;YAEjD;QACF;QAEA,MAAM,MAAM,SAAS,CAAC,KAAK;QAE3B,iEAAiE;QACjE,IAAI,MAAM,MAAM,KAAK;YAAE;QAAU;QAEjC,iCAAiC;QACjC,MAAM,MAAM,UAAU,CAAC;QAEvB,IAAI,MAAM,KAAK;YAAE;QAAU;QAE3B,gBAAgB;QAEhB;IACF;IAEA,6EAA6E;IAC7E,MAAM,MAAM,MAAM,CAAC,UAAU;IAE7B,MAAM,IAAI,GAAG,WAAW,CAAC,gBAAgB,IAAI,CAAC;IAE9C,QAAgB,MAAM,IAAI,CAAC,SAAS,QAAQ;IAC5C,MAAM,IAAI,GAAM;IAChB,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,YAAY,GAAG,UAAU,KAAK;IAC7D,MAAM,MAAM,GAAI;IAChB,MAAM,GAAG,GAAO;QAAE;QAAW,MAAM,IAAI;KAAE;IAEzC,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2347, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/blockquote.js"],"sourcesContent":["// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  oldBMarks  = [];\n  oldBSCount = [];\n  oldSCount  = [];\n  oldTShift  = [];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2527, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/hr.js"],"sourcesContent":["// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,kBAAkB;AAElB;AAEA,IAAI,UAAU,4GAA2B,OAAO;AAGhD,OAAO,OAAO,GAAG,SAAS,GAAG,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM;IAC5D,IAAI,QAAQ,KAAK,IAAI,OACjB,MAAM,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,EACvD,MAAM,MAAM,MAAM,CAAC,UAAU;IAEjC,iEAAiE;IACjE,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI,GAAG;QAAE,OAAO;IAAO;IAEpE,SAAS,MAAM,GAAG,CAAC,UAAU,CAAC;IAE9B,kBAAkB;IAClB,IAAI,WAAW,KAAI,KAAK,OACpB,WAAW,KAAI,KAAK,OACpB,WAAW,KAAI,KAAK,KAAI;QAC1B,OAAO;IACT;IAEA,2EAA2E;IAE3E,MAAM;IACN,MAAO,MAAM,IAAK;QAChB,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC;QAC1B,IAAI,OAAO,UAAU,CAAC,QAAQ,KAAK;YAAE,OAAO;QAAO;QACnD,IAAI,OAAO,QAAQ;YAAE;QAAO;IAC9B;IAEA,IAAI,MAAM,GAAG;QAAE,OAAO;IAAO;IAE7B,IAAI,QAAQ;QAAE,OAAO;IAAM;IAE3B,MAAM,IAAI,GAAG,YAAY;IAEzB,QAAe,MAAM,IAAI,CAAC,MAAM,MAAM;IACtC,MAAM,GAAG,GAAM;QAAE;QAAW,MAAM,IAAI;KAAE;IACxC,MAAM,MAAM,GAAG,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,YAAY,CAAC;IAEvD,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2572, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/list.js"],"sourcesContent":["// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ nextLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ nextLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2868, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/reference.js"],"sourcesContent":["'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3046, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/common/html_blocks.js"],"sourcesContent":["// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,wDAAwD;AAExD;AAGA,OAAO,OAAO,GAAG;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/common/html_re.js"],"sourcesContent":["// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n"],"names":[],"mappings":"AAAA,iCAAiC;AAEjC;AAEA,IAAI,YAAgB;AAEpB,IAAI,WAAgB;AACpB,IAAI,gBAAgB;AACpB,IAAI,gBAAgB;AAEpB,IAAI,aAAc,QAAQ,WAAW,MAAM,gBAAgB,MAAM,gBAAgB;AAEjF,IAAI,YAAc,YAAY,YAAY,iBAAiB,aAAa;AAExE,IAAI,WAAc,6BAA6B,YAAY;AAE3D,IAAI,YAAc;AAClB,IAAI,UAAc;AAClB,IAAI,aAAc;AAClB,IAAI,cAAc;AAClB,IAAI,QAAc;AAElB,IAAI,cAAc,IAAI,OAAO,SAAS,WAAW,MAAM,YAAY,MAAM,UACjD,MAAM,aAAa,MAAM,cAAc,MAAM,QAAQ;AAC7E,IAAI,yBAAyB,IAAI,OAAO,SAAS,WAAW,MAAM,YAAY;AAE9E,OAAO,OAAO,CAAC,WAAW,GAAG;AAC7B,OAAO,OAAO,CAAC,sBAAsB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3141, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/html_block.js"],"sourcesContent":["// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,aAAa;AAEb;AAGA,IAAI;AACJ,IAAI,yBAAyB,8GAA6B,sBAAsB;AAEhF,yEAAyE;AACzE,oEAAoE;AACpE,EAAE;AACF,IAAI,iBAAiB;IACnB;QAAE;QAA8C;QAAoC;KAAM;IAC1F;QAAE;QAAgB;QAAS;KAAM;IACjC;QAAE;QAAgB;QAAS;KAAM;IACjC;QAAE;QAAgB;QAAS;KAAM;IACjC;QAAE;QAAgB;QAAS;KAAM;IACjC;QAAE,IAAI,OAAO,UAAU,YAAY,IAAI,CAAC,OAAO,oBAAoB;QAAM;QAAM;KAAM;IACrF;QAAE,IAAI,OAAO,uBAAuB,MAAM,GAAG;QAAW;QAAM;KAAO;CACtE;AAGD,OAAO,OAAO,GAAG,SAAS,WAAW,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM;IACpE,IAAI,GAAG,UAAU,OAAO,UACpB,MAAM,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,EACvD,MAAM,MAAM,MAAM,CAAC,UAAU;IAEjC,iEAAiE;IACjE,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI,GAAG;QAAE,OAAO;IAAO;IAEpE,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;QAAE,OAAO;IAAO;IAE5C,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI;QAAE,OAAO;IAAO;IAE/D,WAAW,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK;IAEhC,IAAK,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;QAC1C,IAAI,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW;YAAE;QAAO;IACpD;IAEA,IAAI,MAAM,eAAe,MAAM,EAAE;QAAE,OAAO;IAAO;IAEjD,IAAI,QAAQ;QACV,6DAA6D;QAC7D,OAAO,cAAc,CAAC,EAAE,CAAC,EAAE;IAC7B;IAEA,WAAW,YAAY;IAEvB,2CAA2C;IAC3C,kCAAkC;IAClC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW;QACxC,MAAO,WAAW,SAAS,WAAY;YACrC,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,EAAE;gBAAE;YAAO;YAEvD,MAAM,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,SAAS;YACrD,MAAM,MAAM,MAAM,CAAC,SAAS;YAC5B,WAAW,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK;YAEhC,IAAI,cAAc,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW;gBACvC,IAAI,SAAS,MAAM,KAAK,GAAG;oBAAE;gBAAY;gBACzC;YACF;QACF;IACF;IAEA,MAAM,IAAI,GAAG;IAEb,QAAgB,MAAM,IAAI,CAAC,cAAc,IAAI;IAC7C,MAAM,GAAG,GAAO;QAAE;QAAW;KAAU;IACvC,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,WAAW,UAAU,MAAM,SAAS,EAAE;IAErE,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3243, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/heading.js"],"sourcesContent":["// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,uBAAuB;AAEvB;AAEA,IAAI,UAAU,4GAA2B,OAAO;AAGhD,OAAO,OAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM;IACjE,IAAI,IAAI,OAAO,KAAK,OAChB,MAAM,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,EACvD,MAAM,MAAM,MAAM,CAAC,UAAU;IAEjC,iEAAiE;IACjE,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI,GAAG;QAAE,OAAO;IAAO;IAEpE,KAAM,MAAM,GAAG,CAAC,UAAU,CAAC;IAE3B,IAAI,OAAO,KAAI,KAAK,OAAM,OAAO,KAAK;QAAE,OAAO;IAAO;IAEtD,sBAAsB;IACtB,QAAQ;IACR,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC,EAAE;IAC5B,MAAO,OAAO,KAAI,KAAK,OAAM,MAAM,OAAO,SAAS,EAAG;QACpD;QACA,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC,EAAE;IAC9B;IAEA,IAAI,QAAQ,KAAM,MAAM,OAAO,CAAC,QAAQ,KAAM;QAAE,OAAO;IAAO;IAE9D,IAAI,QAAQ;QAAE,OAAO;IAAM;IAE3B,0DAA0D;IAE1D,MAAM,MAAM,cAAc,CAAC,KAAK;IAChC,MAAM,MAAM,aAAa,CAAC,KAAK,MAAM,MAAM,IAAI;IAC/C,IAAI,MAAM,OAAO,QAAQ,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,KAAK;QACvD,MAAM;IACR;IAEA,MAAM,IAAI,GAAG,YAAY;IAEzB,QAAe,MAAM,IAAI,CAAC,gBAAgB,MAAM,OAAO,QAAQ;IAC/D,MAAM,MAAM,GAAG,WAAW,KAAK,CAAC,GAAG;IACnC,MAAM,GAAG,GAAM;QAAE;QAAW,MAAM,IAAI;KAAE;IAExC,QAAiB,MAAM,IAAI,CAAC,UAAU,IAAI;IAC1C,MAAM,OAAO,GAAI,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI;IAC/C,MAAM,GAAG,GAAQ;QAAE;QAAW,MAAM,IAAI;KAAE;IAC1C,MAAM,QAAQ,GAAG,EAAE;IAEnB,QAAe,MAAM,IAAI,CAAC,iBAAiB,MAAM,OAAO,QAAQ,CAAC;IACjE,MAAM,MAAM,GAAG,WAAW,KAAK,CAAC,GAAG;IAEnC,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3298, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/lheading.js"],"sourcesContent":["// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB;AAGA,OAAO,OAAO,GAAG,SAAS,SAAS,KAAK,EAAE,SAAS,EAAE,QAAO,UAAU,GAAV;IAC1D,IAAI,SAAS,WAAW,GAAG,GAAG,OAAO,KAAK,KAAK,OAAO,QAClD,WAAW,YAAY,GAAG,eAC1B,kBAAkB,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;IAEpD,iEAAiE;IACjE,IAAI,MAAM,MAAM,CAAC,UAAU,GAAG,MAAM,SAAS,IAAI,GAAG;QAAE,OAAO;IAAO;IAEpE,gBAAgB,MAAM,UAAU;IAChC,MAAM,UAAU,GAAG,aAAa,yCAAyC;IAEzE,2CAA2C;IAC3C,MAAO,WAAW,WAAW,CAAC,MAAM,OAAO,CAAC,WAAW,WAAY;QACjE,2DAA2D;QAC3D,iEAAiE;QACjE,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,GAAG,GAAG;YAAE;QAAU;QAE9D,EAAE;QACF,uCAAuC;QACvC,EAAE;QACF,IAAI,MAAM,MAAM,CAAC,SAAS,IAAI,MAAM,SAAS,EAAE;YAC7C,MAAM,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,MAAM,CAAC,SAAS;YACrD,MAAM,MAAM,MAAM,CAAC,SAAS;YAE5B,IAAI,MAAM,KAAK;gBACb,SAAS,MAAM,GAAG,CAAC,UAAU,CAAC;gBAE9B,IAAI,WAAW,KAAI,KAAK,OAAM,WAAW,KAAI,KAAK,KAAI;oBACpD,MAAM,MAAM,SAAS,CAAC,KAAK;oBAC3B,MAAM,MAAM,UAAU,CAAC;oBAEvB,IAAI,OAAO,KAAK;wBACd,QAAS,WAAW,KAAI,KAAK,MAAK,IAAI;wBACtC;oBACF;gBACF;YACF;QACF;QAEA,0EAA0E;QAC1E,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,GAAG;YAAE;QAAU;QAE5C,wDAAwD;QACxD,YAAY;QACZ,IAAK,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAI,GAAG,IAAK;YAClD,IAAI,eAAe,CAAC,EAAE,CAAC,OAAO,UAAU,SAAS,OAAO;gBACtD,YAAY;gBACZ;YACF;QACF;QACA,IAAI,WAAW;YAAE;QAAO;IAC1B;IAEA,IAAI,CAAC,OAAO;QACV,8BAA8B;QAC9B,OAAO;IACT;IAEA,UAAU,MAAM,QAAQ,CAAC,WAAW,UAAU,MAAM,SAAS,EAAE,OAAO,IAAI;IAE1E,MAAM,IAAI,GAAG,WAAW;IAExB,QAAiB,MAAM,IAAI,CAAC,gBAAgB,MAAM,OAAO,QAAQ;IACjE,MAAM,MAAM,GAAK,OAAO,YAAY,CAAC;IACrC,MAAM,GAAG,GAAQ;QAAE;QAAW,MAAM,IAAI;KAAE;IAE1C,QAAiB,MAAM,IAAI,CAAC,UAAU,IAAI;IAC1C,MAAM,OAAO,GAAI;IACjB,MAAM,GAAG,GAAQ;QAAE;QAAW,MAAM,IAAI,GAAG;KAAG;IAC9C,MAAM,QAAQ,GAAG,EAAE;IAEnB,QAAiB,MAAM,IAAI,CAAC,iBAAiB,MAAM,OAAO,QAAQ,CAAC;IACnE,MAAM,MAAM,GAAK,OAAO,YAAY,CAAC;IAErC,MAAM,UAAU,GAAG;IAEnB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3378, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_block/paragraph.js"],"sourcesContent":["// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n"],"names":[],"mappings":"AAAA,YAAY;AAEZ;AAGA,OAAO,OAAO,GAAG,SAAS,UAAU,KAAK,EAAE,SAAS,EAAE,OAAO;IAC3D,IAAI,SAAS,WAAW,GAAG,GAAG,OAAO,eACjC,WAAW,YAAY,GACvB,kBAAkB,MAAM,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;IAEpD,gBAAgB,MAAM,UAAU;IAChC,MAAM,UAAU,GAAG;IAEnB,2CAA2C;IAC3C,MAAO,WAAW,WAAW,CAAC,MAAM,OAAO,CAAC,WAAW,WAAY;QACjE,2DAA2D;QAC3D,iEAAiE;QACjE,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,MAAM,SAAS,GAAG,GAAG;YAAE;QAAU;QAE9D,0EAA0E;QAC1E,IAAI,MAAM,MAAM,CAAC,SAAS,GAAG,GAAG;YAAE;QAAU;QAE5C,wDAAwD;QACxD,YAAY;QACZ,IAAK,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAI,GAAG,IAAK;YAClD,IAAI,eAAe,CAAC,EAAE,CAAC,OAAO,UAAU,SAAS,OAAO;gBACtD,YAAY;gBACZ;YACF;QACF;QACA,IAAI,WAAW;YAAE;QAAO;IAC1B;IAEA,UAAU,MAAM,QAAQ,CAAC,WAAW,UAAU,MAAM,SAAS,EAAE,OAAO,IAAI;IAE1E,MAAM,IAAI,GAAG;IAEb,QAAiB,MAAM,IAAI,CAAC,kBAAkB,KAAK;IACnD,MAAM,GAAG,GAAQ;QAAE;QAAW,MAAM,IAAI;KAAE;IAE1C,QAAiB,MAAM,IAAI,CAAC,UAAU,IAAI;IAC1C,MAAM,OAAO,GAAI;IACjB,MAAM,GAAG,GAAQ;QAAE;QAAW,MAAM,IAAI;KAAE;IAC1C,MAAM,QAAQ,GAAG,EAAE;IAEnB,QAAiB,MAAM,IAAI,CAAC,mBAAmB,KAAK,CAAC;IAErD,MAAM,UAAU,GAAG;IAEnB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3430, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/parser_block.js"],"sourcesContent":["/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i, prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n        break;\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched');\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3607, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/state_inline.js"],"sourcesContent":["// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n"],"names":[],"mappings":"AAAA,sBAAsB;AAEtB;AAGA,IAAI;AACJ,IAAI,eAAiB,4GAA2B,YAAY;AAC5D,IAAI,cAAiB,4GAA2B,WAAW;AAC3D,IAAI,iBAAiB,4GAA2B,cAAc;AAG9D,SAAS,YAAY,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,SAAS;IAC1C,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,EAAE,GAAG;IACV,IAAI,CAAC,MAAM,GAAG;IACd,IAAI,CAAC,WAAW,GAAG,MAAM,UAAU,MAAM;IAEzC,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM;IAC7B,IAAI,CAAC,KAAK,GAAG;IACb,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,CAAC,YAAY,GAAG;IAEpB,oDAAoD;IACpD,mDAAmD;IACnD,IAAI,CAAC,KAAK,GAAG,CAAC;IAEd,mDAAmD;IACnD,IAAI,CAAC,UAAU,GAAG,EAAE;IAEpB,gDAAgD;IAChD,IAAI,CAAC,gBAAgB,GAAG,EAAE;IAE1B,wCAAwC;IACxC,IAAI,CAAC,SAAS,GAAG,CAAC;IAClB,IAAI,CAAC,gBAAgB,GAAG;IAExB,sDAAsD;IACtD,gCAAgC;IAChC,IAAI,CAAC,SAAS,GAAG;AACnB;AAGA,qBAAqB;AACrB,EAAE;AACF,YAAY,SAAS,CAAC,WAAW,GAAG;IAClC,IAAI,QAAQ,IAAI,MAAM,QAAQ,IAAI;IAClC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO;IAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY;IAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACjB,IAAI,CAAC,OAAO,GAAG;IACf,OAAO;AACT;AAGA,8BAA8B;AAC9B,kDAAkD;AAClD,EAAE;AACF,YAAY,SAAS,CAAC,IAAI,GAAG,SAAU,IAAI,EAAE,GAAG,EAAE,OAAO;IACvD,IAAI,IAAI,CAAC,OAAO,EAAE;QAChB,IAAI,CAAC,WAAW;IAClB;IAEA,IAAI,QAAQ,IAAI,MAAM,MAAM,KAAK;IACjC,IAAI,aAAa;IAEjB,IAAI,UAAU,GAAG;QACf,cAAc;QACd,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG;IAC7C;IAEA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK;IAExB,IAAI,UAAU,GAAG;QACf,cAAc;QACd,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;QAC1C,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,aAAa;YAAE,YAAY,IAAI,CAAC,UAAU;QAAC;IAC7C;IAEA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK;IAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACtB,OAAO;AACT;AAGA,kEAAkE;AAClE,iEAAiE;AACjE,EAAE;AACF,wEAAwE;AACxE,0EAA0E;AAC1E,EAAE;AACF,YAAY,SAAS,CAAC,UAAU,GAAG,SAAU,KAAK,EAAE,YAAY;IAC9D,IAAI,MAAM,OAAO,UAAU,UAAU,OAAO,UAAU,WAClD,kBAAkB,iBAClB,kBAAkB,iBAClB,gBAAgB,MAChB,iBAAiB,MACjB,MAAM,IAAI,CAAC,MAAM,EACjB,SAAS,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC;IAEjC,8CAA8C;IAC9C,WAAW,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,KAAK;IAExD,MAAO,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,OAAQ;QAAE;IAAO;IAElE,QAAQ,MAAM;IAEd,wCAAwC;IACxC,WAAW,MAAM,MAAM,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO;IAElD,kBAAkB,eAAe,aAAa,YAAY,OAAO,YAAY,CAAC;IAC9E,kBAAkB,eAAe,aAAa,YAAY,OAAO,YAAY,CAAC;IAE9E,mBAAmB,aAAa;IAChC,mBAAmB,aAAa;IAEhC,IAAI,kBAAkB;QACpB,gBAAgB;IAClB,OAAO,IAAI,iBAAiB;QAC1B,IAAI,CAAC,CAAC,oBAAoB,eAAe,GAAG;YAC1C,gBAAgB;QAClB;IACF;IAEA,IAAI,kBAAkB;QACpB,iBAAiB;IACnB,OAAO,IAAI,iBAAiB;QAC1B,IAAI,CAAC,CAAC,oBAAoB,eAAe,GAAG;YAC1C,iBAAiB;QACnB;IACF;IAEA,IAAI,CAAC,cAAc;QACjB,WAAY,iBAAkB,CAAC,CAAC,kBAAkB,eAAe;QACjE,YAAY,kBAAkB,CAAC,CAAC,iBAAkB,eAAe;IACnE,OAAO;QACL,WAAY;QACZ,YAAY;IACd;IAEA,OAAO;QACL,UAAW;QACX,WAAW;QACX,QAAW;IACb;AACF;AAGA,8CAA8C;AAC9C,YAAY,SAAS,CAAC,KAAK,GAAG;AAG9B,OAAO,OAAO,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3732, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/text.js"],"sourcesContent":["// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,4BAA4B;AAE5B;AAGA,yBAAyB;AACzB,sCAAsC;AAEtC,oGAAoG;AAEpG,6DAA6D;AAC7D,+DAA+D;AAC/D,SAAS,iBAAiB,EAAE;IAC1B,OAAQ;QACN,KAAK,KAAI,MAAM;QACf,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;QACd,KAAK,KAAI,KAAK;YACZ,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA,OAAO,OAAO,GAAG,SAAS,KAAK,KAAK,EAAE,MAAM;IAC1C,IAAI,MAAM,MAAM,GAAG;IAEnB,MAAO,MAAM,MAAM,MAAM,IAAI,CAAC,iBAAiB,MAAM,GAAG,CAAC,UAAU,CAAC,MAAO;QACzE;IACF;IAEA,IAAI,QAAQ,MAAM,GAAG,EAAE;QAAE,OAAO;IAAO;IAEvC,IAAI,CAAC,QAAQ;QAAE,MAAM,OAAO,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE;IAAM;IAEjE,MAAM,GAAG,GAAG;IAEZ,OAAO;AACT,GAEA,0CAA0C;CAC1C,EAAE;CACF,+EAA+E;CAC/E,yEAAyE;CACzE,wBAAwB;CAExB;;;;;;;;;;;;;;;;;;;;;;EAsBE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/linkify.js"],"sourcesContent":["// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,0CAA0C;AAE1C;AAGA,+DAA+D;AAC/D,IAAI,YAAY;AAGhB,OAAO,OAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,MAAM;IAC7C,IAAI,KAAK,KAAK,OAAO,OAAO,MAAM,KAAK,SAAS;IAEhD,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO;IACtC,IAAI,MAAM,SAAS,GAAG,GAAG,OAAO;IAEhC,MAAM,MAAM,GAAG;IACf,MAAM,MAAM,MAAM;IAElB,IAAI,MAAM,IAAI,KAAK,OAAO;IAC1B,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI,OAAO;IACtD,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,OAAO,KAAI,KAAK,KAAI,OAAO;IAC1D,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,OAAO,KAAI,KAAK,KAAI,OAAO;IAE1D,QAAQ,MAAM,OAAO,CAAC,KAAK,CAAC;IAC5B,IAAI,CAAC,OAAO,OAAO;IAEnB,QAAQ,KAAK,CAAC,EAAE;IAEhB,OAAO,MAAM,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,MAAM,MAAM;IACvE,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,KAAK,GAAG;IAEd,uDAAuD;IACvD,+CAA+C;IAC/C,IAAI,IAAI,MAAM,IAAI,MAAM,MAAM,EAAE,OAAO;IAEvC,gEAAgE;IAChE,MAAM,IAAI,OAAO,CAAC,QAAQ;IAE1B,UAAU,MAAM,EAAE,CAAC,aAAa,CAAC;IACjC,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,UAAU,OAAO;IAE5C,IAAI,CAAC,QAAQ;QACX,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,MAAM;QAEpD,QAAgB,MAAM,IAAI,CAAC,aAAa,KAAK;QAC7C,MAAM,KAAK,GAAK;YAAE;gBAAE;gBAAQ;aAAS;SAAE;QACvC,MAAM,MAAM,GAAI;QAChB,MAAM,IAAI,GAAM;QAEhB,QAAgB,MAAM,IAAI,CAAC,QAAQ,IAAI;QACvC,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,iBAAiB,CAAC;QAE3C,QAAgB,MAAM,IAAI,CAAC,cAAc,KAAK,CAAC;QAC/C,MAAM,MAAM,GAAI;QAChB,MAAM,IAAI,GAAM;IAClB;IAEA,MAAM,GAAG,IAAI,IAAI,MAAM,GAAG,MAAM,MAAM;IACtC,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3868, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/newline.js"],"sourcesContent":["// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB;AAEA,IAAI,UAAU,4GAA2B,OAAO;AAGhD,OAAO,OAAO,GAAG,SAAS,QAAQ,KAAK,EAAE,MAAM;IAC7C,IAAI,MAAM,KAAK,IAAI,MAAM,MAAM,GAAG;IAElC,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,MAAM,KAAI;QAAE,OAAO;IAAO;IAEhE,OAAO,MAAM,OAAO,CAAC,MAAM,GAAG;IAC9B,MAAM,MAAM,MAAM;IAElB,sBAAsB;IACtB,sEAAsE;IACtE,sEAAsE;IACtE,2BAA2B;IAC3B,IAAI,CAAC,QAAQ;QACX,IAAI,QAAQ,KAAK,MAAM,OAAO,CAAC,UAAU,CAAC,UAAU,MAAM;YACxD,IAAI,QAAQ,KAAK,MAAM,OAAO,CAAC,UAAU,CAAC,OAAO,OAAO,MAAM;gBAC5D,0CAA0C;gBAC1C,KAAK,OAAO;gBACZ,MAAO,MAAM,KAAK,MAAM,OAAO,CAAC,UAAU,CAAC,KAAK,OAAO,KAAM;gBAE7D,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG;gBACvC,MAAM,IAAI,CAAC,aAAa,MAAM;YAChC,OAAO;gBACL,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;gBACxC,MAAM,IAAI,CAAC,aAAa,MAAM;YAChC;QAEF,OAAO;YACL,MAAM,IAAI,CAAC,aAAa,MAAM;QAChC;IACF;IAEA;IAEA,oCAAoC;IACpC,MAAO,MAAM,OAAO,QAAQ,MAAM,GAAG,CAAC,UAAU,CAAC,MAAO;QAAE;IAAO;IAEjE,MAAM,GAAG,GAAG;IACZ,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3911, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/escape.js"],"sourcesContent":["// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,uCAAuC;AAEvC;AAEA,IAAI,UAAU,4GAA2B,OAAO;AAEhD,IAAI,UAAU,EAAE;AAEhB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;IAAE,QAAQ,IAAI,CAAC;AAAI;AAEjD,qCACG,KAAK,CAAC,IAAI,OAAO,CAAC,SAAU,EAAE;IAAI,OAAO,CAAC,GAAG,UAAU,CAAC,GAAG,GAAG;AAAG;AAGpE,OAAO,OAAO,GAAG,SAAS,OAAO,KAAK,EAAE,MAAM;IAC5C,IAAI,KAAK,KAAK,SAAS,YAAY,OAAO,MAAM,MAAM,GAAG,EAAE,MAAM,MAAM,MAAM;IAE7E,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI,OAAO;IACtD;IAEA,qCAAqC;IACrC,IAAI,OAAO,KAAK,OAAO;IAEvB,MAAM,MAAM,GAAG,CAAC,UAAU,CAAC;IAE3B,IAAI,QAAQ,MAAM;QAChB,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,CAAC,aAAa,MAAM;QAChC;QAEA;QACA,0CAA0C;QAC1C,MAAO,MAAM,IAAK;YAChB,MAAM,MAAM,GAAG,CAAC,UAAU,CAAC;YAC3B,IAAI,CAAC,QAAQ,MAAM;YACnB;QACF;QAEA,MAAM,GAAG,GAAG;QACZ,OAAO;IACT;IAEA,aAAa,MAAM,GAAG,CAAC,IAAI;IAE3B,IAAI,OAAO,UAAU,OAAO,UAAU,MAAM,IAAI,KAAK;QACnD,MAAM,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM;QAEjC,IAAI,OAAO,UAAU,OAAO,QAAQ;YAClC,cAAc,MAAM,GAAG,CAAC,MAAM,EAAE;YAChC;QACF;IACF;IAEA,UAAU,OAAO;IAEjB,IAAI,CAAC,QAAQ;QACX,QAAQ,MAAM,IAAI,CAAC,gBAAgB,IAAI;QAEvC,IAAI,MAAM,OAAO,OAAO,CAAC,IAAI,KAAK,GAAG;YACnC,MAAM,OAAO,GAAG;QAClB,OAAO;YACL,MAAM,OAAO,GAAG;QAClB;QAEA,MAAM,MAAM,GAAG;QACf,MAAM,IAAI,GAAK;IACjB;IAEA,MAAM,GAAG,GAAG,MAAM;IAClB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3969, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/backticks.js"],"sourcesContent":["// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,kBAAkB;AAElB;AAGA,OAAO,OAAO,GAAG,SAAS,SAAS,KAAK,EAAE,MAAM;IAC9C,IAAI,OAAO,KAAK,QAAQ,OAAO,YAAY,UAAU,cAAc,cAC/D,MAAM,MAAM,GAAG,EACf,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC;IAE9B,IAAI,OAAO,KAAI,KAAK,KAAI;QAAE,OAAO;IAAO;IAExC,QAAQ;IACR;IACA,MAAM,MAAM,MAAM;IAElB,qBAAqB;IACrB,MAAO,MAAM,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,IAAI;QAAE;IAAO;IAExE,SAAS,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO;IAChC,eAAe,OAAO,MAAM;IAE5B,IAAI,MAAM,gBAAgB,IAAI,CAAC,MAAM,SAAS,CAAC,aAAa,IAAI,CAAC,KAAK,OAAO;QAC3E,IAAI,CAAC,QAAQ,MAAM,OAAO,IAAI;QAC9B,MAAM,GAAG,IAAI;QACb,OAAO;IACT;IAEA,WAAW;IAEX,wFAAwF;IACxF,MAAO,CAAC,aAAa,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,SAAS,MAAM,CAAC,EAAG;QAC7D,WAAW,aAAa;QAExB,qBAAqB;QACrB,MAAO,WAAW,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,cAAc,KAAI,KAAK,IAAI;YAAE;QAAY;QAEvF,eAAe,WAAW;QAE1B,IAAI,iBAAiB,cAAc;YACjC,gCAAgC;YAChC,IAAI,CAAC,QAAQ;gBACX,QAAY,MAAM,IAAI,CAAC,eAAe,QAAQ;gBAC9C,MAAM,MAAM,GAAI;gBAChB,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,YAClC,OAAO,CAAC,OAAO,KACf,OAAO,CAAC,YAAY;YACzB;YACA,MAAM,GAAG,GAAG;YACZ,OAAO;QACT;QAEA,2FAA2F;QAC3F,MAAM,SAAS,CAAC,aAAa,GAAG;IAClC;IAEA,gDAAgD;IAChD,MAAM,gBAAgB,GAAG;IAEzB,IAAI,CAAC,QAAQ,MAAM,OAAO,IAAI;IAC9B,MAAM,GAAG,IAAI;IACb,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4023, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/strikethrough.js"],"sourcesContent":["// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4125, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/emphasis.js"],"sourcesContent":["// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4222, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/link.js"],"sourcesContent":["// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4363, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/image.js"],"sourcesContent":["// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,kCAAkC;AAElC;AAEA,IAAI,qBAAuB,4GAA2B,kBAAkB;AACxE,IAAI,UAAuB,4GAA2B,OAAO;AAG7D,OAAO,OAAO,GAAG,SAAS,MAAM,KAAK,EAAE,MAAM;IAC3C,IAAI,OACA,MACA,SACA,OACA,UACA,YACA,KACA,KACA,KACA,OACA,OACA,QACA,OACA,OAAO,IACP,SAAS,MAAM,GAAG,EAClB,MAAM,MAAM,MAAM;IAEtB,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,KAAI,KAAK,KAAI;QAAE,OAAO;IAAO;IACrE,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,OAAO,KAAI,KAAK,KAAI;QAAE,OAAO;IAAO;IAEzE,aAAa,MAAM,GAAG,GAAG;IACzB,WAAW,MAAM,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,MAAM,GAAG,GAAG,GAAG;IAEjE,sDAAsD;IACtD,IAAI,WAAW,GAAG;QAAE,OAAO;IAAO;IAElC,MAAM,WAAW;IACjB,IAAI,MAAM,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI;QAC1D,EAAE;QACF,cAAc;QACd,EAAE;QAEF,8BAA8B;QAC9B,kCAAkC;QAClC;QACA,MAAO,MAAM,KAAK,MAAO;YACvB,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC;YAC5B,IAAI,CAAC,QAAQ,SAAS,SAAS,MAAM;gBAAE;YAAO;QAChD;QACA,IAAI,OAAO,KAAK;YAAE,OAAO;QAAO;QAEhC,8BAA8B;QAC9B,2CAA2C;QAC3C,QAAQ;QACR,MAAM,MAAM,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,MAAM,GAAG,EAAE,KAAK,MAAM,MAAM;QACxE,IAAI,IAAI,EAAE,EAAE;YACV,OAAO,MAAM,EAAE,CAAC,aAAa,CAAC,IAAI,GAAG;YACrC,IAAI,MAAM,EAAE,CAAC,YAAY,CAAC,OAAO;gBAC/B,MAAM,IAAI,GAAG;YACf,OAAO;gBACL,OAAO;YACT;QACF;QAEA,8BAA8B;QAC9B,0CAA0C;QAC1C,QAAQ;QACR,MAAO,MAAM,KAAK,MAAO;YACvB,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC;YAC5B,IAAI,CAAC,QAAQ,SAAS,SAAS,MAAM;gBAAE;YAAO;QAChD;QAEA,8BAA8B;QAC9B,8CAA8C;QAC9C,MAAM,MAAM,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,GAAG,EAAE,KAAK,MAAM,MAAM;QAClE,IAAI,MAAM,OAAO,UAAU,OAAO,IAAI,EAAE,EAAE;YACxC,QAAQ,IAAI,GAAG;YACf,MAAM,IAAI,GAAG;YAEb,8BAA8B;YAC9B,mDAAmD;YACnD,MAAO,MAAM,KAAK,MAAO;gBACvB,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC;gBAC5B,IAAI,CAAC,QAAQ,SAAS,SAAS,MAAM;oBAAE;gBAAO;YAChD;QACF,OAAO;YACL,QAAQ;QACV;QAEA,IAAI,OAAO,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI;YAC3D,MAAM,GAAG,GAAG;YACZ,OAAO;QACT;QACA;IACF,OAAO;QACL,EAAE;QACF,iBAAiB;QACjB,EAAE;QACF,IAAI,OAAO,MAAM,GAAG,CAAC,UAAU,KAAK,aAAa;YAAE,OAAO;QAAO;QAEjE,IAAI,MAAM,OAAO,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI;YAC1D,QAAQ,MAAM;YACd,MAAM,MAAM,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO;YAC7C,IAAI,OAAO,GAAG;gBACZ,QAAQ,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO;YACjC,OAAO;gBACL,MAAM,WAAW;YACnB;QACF,OAAO;YACL,MAAM,WAAW;QACnB;QAEA,8CAA8C;QAC9C,sEAAsE;QACtE,IAAI,CAAC,OAAO;YAAE,QAAQ,MAAM,GAAG,CAAC,KAAK,CAAC,YAAY;QAAW;QAE7D,MAAM,MAAM,GAAG,CAAC,UAAU,CAAC,mBAAmB,OAAO;QACrD,IAAI,CAAC,KAAK;YACR,MAAM,GAAG,GAAG;YACZ,OAAO;QACT;QACA,OAAO,IAAI,IAAI;QACf,QAAQ,IAAI,KAAK;IACnB;IAEA,EAAE;IACF,uEAAuE;IACvE,iDAAiD;IACjD,EAAE;IACF,IAAI,CAAC,QAAQ;QACX,UAAU,MAAM,GAAG,CAAC,KAAK,CAAC,YAAY;QAEtC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,CACnB,SACA,MAAM,EAAE,EACR,MAAM,GAAG,EACT,SAAS,EAAE;QAGb,QAAiB,MAAM,IAAI,CAAC,SAAS,OAAO;QAC5C,MAAM,KAAK,GAAM,QAAQ;YAAE;gBAAE;gBAAO;aAAM;YAAE;gBAAE;gBAAO;aAAI;SAAE;QAC3D,MAAM,QAAQ,GAAG;QACjB,MAAM,OAAO,GAAI;QAEjB,IAAI,OAAO;YACT,MAAM,IAAI,CAAC;gBAAE;gBAAS;aAAO;QAC/B;IACF;IAEA,MAAM,GAAG,GAAG;IACZ,MAAM,MAAM,GAAG;IACf,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4508, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/autolink.js"],"sourcesContent":["// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n"],"names":[],"mappings":"AAAA,qCAAqC;AAErC;AAGA,kBAAkB,GAClB,IAAI,WAAc;AAClB,IAAI,cAAc;AAGlB,OAAO,OAAO,GAAG,SAAS,SAAS,KAAK,EAAE,MAAM;IAC9C,IAAI,KAAK,SAAS,OAAO,IAAI,OAAO,KAChC,MAAM,MAAM,GAAG;IAEnB,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI;QAAE,OAAO;IAAO;IAE/D,QAAQ,MAAM,GAAG;IACjB,MAAM,MAAM,MAAM;IAElB,OAAS;QACP,IAAI,EAAE,OAAO,KAAK,OAAO;QAEzB,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC;QAE1B,IAAI,OAAO,KAAK,KAAK,KAAI,OAAO;QAChC,IAAI,OAAO,KAAK,KAAK,KAAI;IAC3B;IAEA,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,QAAQ,GAAG;IAEjC,IAAI,YAAY,IAAI,CAAC,MAAM;QACzB,UAAU,MAAM,EAAE,CAAC,aAAa,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,UAAU;YAAE,OAAO;QAAO;QAErD,IAAI,CAAC,QAAQ;YACX,QAAgB,MAAM,IAAI,CAAC,aAAa,KAAK;YAC7C,MAAM,KAAK,GAAK;gBAAE;oBAAE;oBAAQ;iBAAS;aAAE;YACvC,MAAM,MAAM,GAAI;YAChB,MAAM,IAAI,GAAM;YAEhB,QAAgB,MAAM,IAAI,CAAC,QAAQ,IAAI;YACvC,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,iBAAiB,CAAC;YAE3C,QAAgB,MAAM,IAAI,CAAC,cAAc,KAAK,CAAC;YAC/C,MAAM,MAAM,GAAI;YAChB,MAAM,IAAI,GAAM;QAClB;QAEA,MAAM,GAAG,IAAI,IAAI,MAAM,GAAG;QAC1B,OAAO;IACT;IAEA,IAAI,SAAS,IAAI,CAAC,MAAM;QACtB,UAAU,MAAM,EAAE,CAAC,aAAa,CAAC,YAAY;QAC7C,IAAI,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,UAAU;YAAE,OAAO;QAAO;QAErD,IAAI,CAAC,QAAQ;YACX,QAAgB,MAAM,IAAI,CAAC,aAAa,KAAK;YAC7C,MAAM,KAAK,GAAK;gBAAE;oBAAE;oBAAQ;iBAAS;aAAE;YACvC,MAAM,MAAM,GAAI;YAChB,MAAM,IAAI,GAAM;YAEhB,QAAgB,MAAM,IAAI,CAAC,QAAQ,IAAI;YACvC,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,iBAAiB,CAAC;YAE3C,QAAgB,MAAM,IAAI,CAAC,cAAc,KAAK,CAAC;YAC/C,MAAM,MAAM,GAAI;YAChB,MAAM,IAAI,GAAM;QAClB;QAEA,MAAM,GAAG,IAAI,IAAI,MAAM,GAAG;QAC1B,OAAO;IACT;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4581, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/html_inline.js"],"sourcesContent":["// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = match[0];\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n"],"names":[],"mappings":"AAAA,oBAAoB;AAEpB;AAGA,IAAI,cAAc,8GAA6B,WAAW;AAG1D,SAAS,WAAW,GAAG;IACrB,OAAO,YAAY,IAAI,CAAC;AAC1B;AACA,SAAS,YAAY,GAAG;IACtB,OAAO,aAAa,IAAI,CAAC;AAC3B;AAGA,SAAS,SAAS,EAAE;IAClB,qBAAqB,GACrB,IAAI,KAAK,KAAK,MAAM,gBAAgB;IACpC,OAAO,AAAC,MAAM,KAAI,KAAK,OAAQ,MAAM,KAAI,KAAK;AAChD;AAGA,OAAO,OAAO,GAAG,SAAS,YAAY,KAAK,EAAE,MAAM;IACjD,IAAI,IAAI,OAAO,KAAK,OAChB,MAAM,MAAM,GAAG;IAEnB,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;QAAE,OAAO;IAAO;IAE5C,cAAc;IACd,MAAM,MAAM,MAAM;IAClB,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,OACvC,MAAM,KAAK,KAAK;QAClB,OAAO;IACT;IAEA,4BAA4B;IAC5B,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM;IAChC,IAAI,OAAO,KAAI,KAAK,OAChB,OAAO,KAAI,KAAK,OAChB,OAAO,KAAI,KAAK,OAChB,CAAC,SAAS,KAAK;QACjB,OAAO;IACT;IAEA,QAAQ,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;IACnC,IAAI,CAAC,OAAO;QAAE,OAAO;IAAO;IAE5B,IAAI,CAAC,QAAQ;QACX,QAAgB,MAAM,IAAI,CAAC,eAAe,IAAI;QAC9C,MAAM,OAAO,GAAG,KAAK,CAAC,EAAE;QAExB,IAAI,WAAW,MAAM,OAAO,GAAI,MAAM,SAAS;QAC/C,IAAI,YAAY,MAAM,OAAO,GAAG,MAAM,SAAS;IACjD;IACA,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM;IAC5B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4627, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/entity.js"],"sourcesContent":["// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n"],"names":[],"mappings":"AAAA,oDAAoD;AAEpD;AAEA,IAAI;AACJ,IAAI,MAAoB,4GAA2B,GAAG;AACtD,IAAI,oBAAoB,4GAA2B,iBAAiB;AACpE,IAAI,gBAAoB,4GAA2B,aAAa;AAGhE,IAAI,aAAa;AACjB,IAAI,WAAa;AAGjB,OAAO,OAAO,GAAG,SAAS,OAAO,KAAK,EAAE,MAAM;IAC5C,IAAI,IAAI,MAAM,OAAO,OAAO,MAAM,MAAM,GAAG,EAAE,MAAM,MAAM,MAAM;IAE/D,IAAI,MAAM,GAAG,CAAC,UAAU,CAAC,SAAS,KAAI,KAAK,KAAI,OAAO;IAEtD,IAAI,MAAM,KAAK,KAAK,OAAO;IAE3B,KAAK,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM;IAEhC,IAAI,OAAO,KAAK,KAAK,KAAI;QACvB,QAAQ,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QACnC,IAAI,OAAO;YACT,IAAI,CAAC,QAAQ;gBACX,OAAO,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,OAAO,MAAM,SAAS,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,MAAM,SAAS,KAAK,CAAC,EAAE,EAAE;gBAEhG,QAAgB,MAAM,IAAI,CAAC,gBAAgB,IAAI;gBAC/C,MAAM,OAAO,GAAG,kBAAkB,QAAQ,cAAc,QAAQ,cAAc;gBAC9E,MAAM,MAAM,GAAI,KAAK,CAAC,EAAE;gBACxB,MAAM,IAAI,GAAM;YAClB;YACA,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM;YAC5B,OAAO;QACT;IACF,OAAO;QACL,QAAQ,MAAM,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;QACnC,IAAI,OAAO;YACT,IAAI,IAAI,UAAU,KAAK,CAAC,EAAE,GAAG;gBAC3B,IAAI,CAAC,QAAQ;oBACX,QAAgB,MAAM,IAAI,CAAC,gBAAgB,IAAI;oBAC/C,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;oBAClC,MAAM,MAAM,GAAI,KAAK,CAAC,EAAE;oBACxB,MAAM,IAAI,GAAM;gBAClB;gBACA,MAAM,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM;gBAC5B,OAAO;YACT;QACF;IACF;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4675, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/balance_pairs.js"],"sourcesContent":["// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4783, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/rules_inline/fragments_join.js"],"sourcesContent":["// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,uEAAuE;AACvE,EAAE;AACF,2EAA2E;AAC3E,2EAA2E;AAC3E,yEAAyE;AACzE,6DAA6D;AAC7D,EAAE;AACF;AAGA,OAAO,OAAO,GAAG,SAAS,eAAe,KAAK;IAC5C,IAAI,MAAM,MACN,QAAQ,GACR,SAAS,MAAM,MAAM,EACrB,MAAM,MAAM,MAAM,CAAC,MAAM;IAE7B,IAAK,OAAO,OAAO,GAAG,OAAO,KAAK,OAAQ;QACxC,yEAAyE;QACzE,4BAA4B;QAC5B,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,SAAS,cAAc;QACrD,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG;QACrB,IAAI,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,SAAS,cAAc;QAErD,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,UACtB,OAAO,IAAI,OACX,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK,QAAQ;YAEpC,mCAAmC;YACnC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,OAAO;QAC5E,OAAO;YACL,IAAI,SAAS,MAAM;gBAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;YAAE;YAElD;QACF;IACF;IAEA,IAAI,SAAS,MAAM;QACjB,OAAO,MAAM,GAAG;IAClB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4819, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/parser_inline.js"],"sourcesContent":["/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i, prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\"); }\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5024, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/presets/default.js"],"sourcesContent":["// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n"],"names":[],"mappings":"AAAA,8BAA8B;AAE9B;AAGA,OAAO,OAAO,GAAG;IACf,SAAS;QACP,MAAc;QACd,UAAc;QACd,QAAc;QACd,YAAc;QACd,SAAc;QAEd,oEAAoE;QACpE,aAAc;QAEd,sEAAsE;QACtE,4DAA4D;QAC5D,EAAE;QACF,kEAAkE;QAClE,wEAAwE;QACxE,QAAQ;QAA4B,QAAQ,GAE5C,oDAAoD;QACpD,6EAA6E;QAC7E,6DAA6D;QAC7D,EAAE;QACF,0CAA0C;QAC1C,EAAE;QACF,WAAW;QAEX,YAAc,IAAe,uCAAuC;IACtE;IAEA,YAAY;QAEV,MAAM,CAAC;QACP,OAAO,CAAC;QACR,QAAQ,CAAC;IACX;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5061, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/presets/zero.js"],"sourcesContent":["// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,+EAA+E;AAC/E,iDAAiD;AAEjD;AAGA,OAAO,OAAO,GAAG;IACf,SAAS;QACP,MAAc;QACd,UAAc;QACd,QAAc;QACd,YAAc;QACd,SAAc;QAEd,oEAAoE;QACpE,aAAc;QAEd,sEAAsE;QACtE,4DAA4D;QAC5D,EAAE;QACF,kEAAkE;QAClE,wEAAwE;QACxE,QAAQ;QAA4B,QAAQ,GAE5C,oDAAoD;QACpD,6EAA6E;QAC7E,6DAA6D;QAC7D,EAAE;QACF,0CAA0C;QAC1C,EAAE;QACF,WAAW;QAEX,YAAc,GAAc,uCAAuC;IACrE;IAEA,YAAY;QAEV,MAAM;YACJ,OAAO;gBACL;gBACA;gBACA;gBACA;aACD;QACH;QAEA,OAAO;YACL,OAAO;gBACL;aACD;QACH;QAEA,QAAQ;YACN,OAAO;gBACL;aACD;YACD,QAAQ;gBACN;gBACA;aACD;QACH;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5118, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/presets/commonmark.js"],"sourcesContent":["// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n"],"names":[],"mappings":"AAAA,6BAA6B;AAE7B;AAGA,OAAO,OAAO,GAAG;IACf,SAAS;QACP,MAAc;QACd,UAAc;QACd,QAAc;QACd,YAAc;QACd,SAAc;QAEd,oEAAoE;QACpE,aAAc;QAEd,sEAAsE;QACtE,4DAA4D;QAC5D,EAAE;QACF,kEAAkE;QAClE,wEAAwE;QACxE,QAAQ;QAA4B,QAAQ,GAE5C,oDAAoD;QACpD,6EAA6E;QAC7E,6DAA6D;QAC7D,EAAE;QACF,0CAA0C;QAC1C,EAAE;QACF,WAAW;QAEX,YAAc,GAAc,uCAAuC;IACrE;IAEA,YAAY;QAEV,MAAM;YACJ,OAAO;gBACL;gBACA;gBACA;gBACA;aACD;QACH;QAEA,OAAO;YACL,OAAO;gBACL;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;QACH;QAEA,QAAQ;YACN,OAAO;gBACL;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,QAAQ;gBACN;gBACA;gBACA;aACD;QACH;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5193, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/lib/index.js"],"sourcesContent":["// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5714, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanju/Code/pmay-chatbot/frontend/node_modules/markdown-it/index.js"],"sourcesContent":["'use strict';\n\n\nmodule.exports = require('./lib/');\n"],"names":[],"mappings":"AAAA;AAGA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}